/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

//  Mac
#define M_RDO LS(LG(Z))
#define M_PST LG(V)
#define M_CPY LG(C)
#define M_CUT LG(X)
#define M_UND LG(Z)
#define M_SNX LG(D)
#define M_MNX LA(RIGHT)
#define M_MPR LA(LEFT)
#define M_SAV LG(S)
#define M_NEW LG(N)
#define M_CLW LG(W)
#define M_QAP LG(Q)
#define M_DEL LG(D)

// Win
#define W_RDO LC(Y)
#define W_PST LC(V)
#define W_CPY LC(C)
#define W_CUT LC(X)
#define W_UND LC(Z)
#define W_SNX LC(D)
#define W_MNX LC(RIGHT)
#define W_MPR LC(LEFT)
#define W_SAV LC(S)
#define W_NEW LC(N)
#define W_CLW LC(W)
#define W_QAP LS(LA(F4))
#define W_DEL DELETE

&mmv {
    time-to-max-speed-ms = <750>;
    //time-to-max-speed-ms = <500>;
    acceleration-exponent=<1>;
};
&mwh {
    time-to-max-speed-ms = <2000>;
    acceleration-exponent=<0>;
};

  / {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            // Prevent normal rollover on alphas from accidentally triggering mods, for a interval of quick-tap-ms.
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        mot: momentary_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "Momentary layer";
            #binding-cells = <2>;            
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            // Tune quick-tap-ms to enable double tap hold auto-repeat.
            quick-tap-ms = <200>;            
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
            macbt1: macbt1 {
            label = "macBT1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to 0>
                , <&bt BT_SEL 1>
                ;
        };
            winbt2: winbt2 {
            label = "winBT2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to 1>
                , <&bt BT_SEL 2>
                ;
        };
            macbt3: macbt3 {
            label = "macBT3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to 0>
                , <&bt BT_SEL 3>
                ;
        };
            zed_em_kay: zed_em_kay {
            label = "ZM_zed_em_kay";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    keymap {
      compatible = "zmk,keymap";
      layer0 {
          bindings = <
          &none &kp Q      &kp W      &kp E &kp R              &kp T         &kp Y &kp U        &kp I       &kp O        &kp P              &none
          &none &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHIFT F &kp G         &kp H &hm RSHIFT J &hm RCTRL K &hm RALT L   &hm RGUI SEMICOLON &none
          &none &kp Z      &kp X      &kp C       &kp V        &kp B         &kp N &kp M        &kp COMMA   &kp DOT      &kp SLASH          &to 0
                                     &mot 8 ESC &mot 4 SPACE &kp TAB         &mot 6 ENTER &mot 5 BACKSPACE &mot 7 DELETE
          >;
        };
      layer1 {
          bindings = <
          &trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans &trans
          &trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans &trans
          &trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans &to 0
                           &mot 9 ESC &trans &trans                 &trans &trans &trans
          >;
        };
      layer2 {
          bindings = <
          &none &kp Q      &kp W      &kp F       &kp P        &kp B         &kp J &kp L        &kp U       &kp Y        &kp SEMICOLON &none
          &none &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHIFT T &kp G         &kp M &hm RSHIFT N &hm RCTRL E &hm RALT I   &hm RGUI O    &none
          &none &kp Z      &kp X      &kp C       &kp D        &kp V         &kp K &kp H        &kp COMMA   &kp DOT      &kp SLASH     &to 0
                                     &mot 8 ESC &mot 2 SPACE &kp TAB         &mot 4 ENTER &mot 3 BACKSPACE &mot 5 DELETE
          >;
        };
      layer3 {
          bindings = <
          &trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans &trans
          &trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans &trans
          &trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans &to 0
                           &mot 9 ESC &trans &trans                 &trans &trans &trans
          >;
        };
      layer4 {
          bindings = <
          &trans &kp COMMA    &kp N7      &kp N8       &kp N9        &mwh SCROLL_VERT(15)         &kp HOME             &kp PAGE_DOWN        &kp PAGE_UP           &kp END             &mkp MCLK &none
          &trans &hm LGUI DOT &hm LALT N4 &hm LCTRL N5 &hm LSHIFT N6 &mwh SCROLL_VERT(-15)        &kp LEFT             &kp DOWN             &kp UP                &kp RIGHT           &mkp RCLK &sl 7
          &trans &kp N0       &kp N1      &kp N2       &kp N3        &none                        &mmv MOVE_HOR(-3500) &mmv MOVE_VERT(3500) &mmv MOVE_VERT(-3500) &mmv MOVE_HOR(3500) &mkp LCLK &to 0
                                                                     &trans &trans &trans         &kp ENTER &kp BACKSPACE &kp DELETE
          >;
        };
      layer5 {
          bindings = < 
          &trans &kp RPAR &kp RBKT  &kp RBRC  &kp GT   &none                 &kp GRAVE        &kp UNDER &kp AT    &kp BACKSLASH &kp HASH          &none
          &trans &kp LPAR &kp LBKT  &kp LBRC  &kp LT   &kp QMARK             &kp PLUS         &kp MINUS &kp ASTRK &kp SLASH     &kp EQUAL         &sl 7
          &trans &kp EXCL &kp DLLR  &kp PRCNT &kp AMPS &none                 &kp SINGLE_QUOTE &kp TILDE &kp CARET &kp PIPE      &kp DOUBLE_QUOTES &to 0
                                     &kp ESC &kp SPACE &kp TAB               &trans &trans &trans
          >;
        };
      layer6 {
          bindings = <
          &none &kp PRINTSCREEN &kp F7 &kp F8 &kp F9 &kp F10                 &none          &kp C_VOLUME_DOWN &kp C_VOLUME_UP  &kp C_MUTE         &none &kp C_EJECT
          &none &kp INSERT      &kp F4 &kp F5 &kp F6 &kp F11                 &kp C_PREVIOUS &kp C_STOP        &kp C_PLAY_PAUSE &kp C_NEXT         &none &sl 7
          &none &kp CAPSLOCK    &kp F1 &kp F2 &kp F3 &kp F12                 &kp C_REWIND   &none             &none            &kp C_FAST_FORWARD &none &to 0
                                           &none &none &none                 &none &none &none
          >;
        };
      layer7 {
          bindings = <
          &none  &bt BT_CLR   &out OUT_USB &out OUT_BLE &none        &none                 &kp N7 &to 7  &to 8  &to 9 &none &kp N7
          &none  &none        &bt BT_SEL 4 &none        &none        &none                 &kp N7 &to 4  &to 5  &to 6 &none &none
          &none  &bt BT_SEL 0 &macbt1      &winbt2      &macbt3      &none                 &to 0  &to 1  &to 2  &to 3 &none &to 0
                                                        &none &none &none                 &none &none &none
          >;
        };
      layer8 {
          bindings = <
          &none &kp M_QAP &kp M_CLW &kp N8    &kp N8     &kp N8         &kp N8    &kp N8 &kp N8 &kp N8    &kp N8 &zed_em_kay
          &none &kp N8    &kp M_SAV &kp M_DEL &kp LSHIFT &kp A          &kp M_MPR &kp N8 &kp N8 &kp M_MNX &kp N8 &none
          &none &kp M_UND &kp M_CUT &kp M_CPY &kp M_PST  &kp M_RDO      &kp M_NEW &kp N8 &kp N8 &kp N8    &kp N8 &to 0
                                  &none &none &none                    &none &none &none
          >;
        };
      layer9 {
          bindings = <
          &none &kp W_QAP &kp W_CLW &kp N9    &kp N9     &kp N9         &kp N9    &kp N9 &kp N9 &kp N9    &kp N9 &zed_em_kay
          &none &kp N9    &kp W_SAV &kp W_DEL &kp LSHIFT &kp A          &kp W_MPR &kp N9 &kp N9 &kp W_MNX &kp N9 &none
          &none &kp W_UND &kp W_CUT &kp W_CPY &kp W_PST  &kp W_RDO      &kp W_NEW &kp N9 &kp N9 &kp N9    &kp N9 &to 0
                                  &none &none &none                    &none &none &none
          >;
        };
    };
  };

